<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>SMIL Player application</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.0/font/bootstrap-icons.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
</head>

<body>
  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup"
        aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="navbar-nav">
          <a class="nav-link active" aria-current="page" href="#">Home</a>
        </div>
      </div>
    </div>
  </nav>

  <div class="container py-3">
    {{{body}}}
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
    crossorigin="anonymous"></script>
  <script>
    const form = document.querySelector('form');
    const stepOneSection = document.querySelector('#step-one');
    const stepTwoSection = document.querySelector('#step-two');
    let currentStep = 1;

    /* form buttons */
    const nextButtons = Array.from(document.querySelectorAll('.btn-next'));
    const stepOneButton = document.querySelector('#step-one-button');

    /* Form fields */
    const inputType = document.querySelector('#inputType');
    const textContentGroup = document.querySelector('#textContent-group');

    const stepTwoFields = Array.from(document.querySelectorAll('#step-two .form-group'));


    /* Create a global functionality for next buttons */
    nextButtons.forEach(button => button.addEventListener('click', e => {
      e.preventDefault();
      const nextStep = e.target.dataset.step;
      switch (nextStep) {
        case '2':
          showStepTwo();
          break;
      }

    }));


    function showStepTwo() {
      currentStep += 1;
      stepOneSection.classList.add('d-none');
      stepTwoSection.classList.remove('d-none');

      switch (form.contentType.value) {
        case 'text':
          // show only the text fields
          showStepTwoField('textContent-group');
          // hide other fields
          break;
        case 'image':
          showStepTwoField('imageUrl-group');
          break;
        case 'imageFile':
          showStepTwoField('imageFileSrc-group');
          break;
        case 'video':
          showStepTwoField('videoUrl-group');
          break;
        case 'videoFile':
          showStepTwoField('videoFileSrc-group');
          break;
      }
    }

    function showStepTwoField(fieldId) {
      stepTwoFields.map(item => {
        if (item.id === fieldId) {
          item.classList.remove('d-none');
        } else {
          item.classList.add('d-none');
        }
      });
    }

  </script>
</body>

</html>